name: Build OpenPnP Capture Distribution

on: 
  push:
  pull_request:

jobs:
  build: 
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x86_64, aarch64]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Install ninja-build tool
        uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Prepare build and deploy dirs
        run: |
          mkdir build
          mkdir deploy

      - name: "macOS: Build and deploy"
        run: |
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release cmake ..
          make
          cd ..
          cp build/mac/tests/openpnp-capture-test deploy/openpnp-capture-test-${{ matrix.os }}-${{ matrix.arch }}
          cp build/libopenpnp-capture.dylib deploy/libopenpnp-capture-${{ matrix.os }}-${{ matrix.arch }}.dylib
        if: matrix.os == 'macos-latest'

      - name: "Linux: Build and deploy"
        run: |
          sudo apt-get update -y && sudo apt-get install -y nasm libgtk-3-dev
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release cmake ..
          make
          cd ..
          cp build/linux/tests/openpnp-capture-test deploy/openpnp-capture-test-${{ matrix.os }}-${{ matrix.arch }}
          cp build/libopenpnp-capture.so deploy/libopenpnp-capture-${{ matrix.os }}-${{ matrix.arch }}.so
        if: matrix.os == 'ubuntu-latest'

      - name: "Windows: Build and deploy"
        run: |
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release cmake -G "Unix Makefiles" ..
          make
          cd ..
          cp build/win/tests/openpnp-capture-test.exe deploy/openpnp-capture-test-${{ matrix.os }}-${{ matrix.arch }}.exe
          cp build/libopenpnp-capture.dll deploy/libopenpnp-capture-${{ matrix.os }}-${{ matrix.arch }}.dll
        if: matrix.os == 'windows-latest'

      # - name: Cross compile artifacts for aarch64/arm64 if running on Linux
      #   uses: uraimo/run-on-arch-action@v2.0.10
      #   with:
      #     arch: aarch64 # No dockerfile for x86_64 on https://github.com/uraimo/run-on-arch-action/tree/master/Dockerfiles
      #     distro: ubuntu20.04 # Different from matrix.os on GHA: https://github.com/marketplace/actions/run-on-architecture#supported-platforms
      #     dockerRunArgs: |
      #       --volume "${PWD}/build:/build"
      #       --volume "${PWD}/deploy:/deploy"

      #     run: |
      #            apt-get update -y && apt-get install -y cmake make nasm libgtk-3-dev build-essential # install same packages as above within the cross-compiling container
      #            cd build && cmake .. && make && cd ..
      #            cp /build/linux/tests/openpnp-capture-test /deploy/openpnp-capture-test-${{ matrix.os }}-${{ matrix.arch }}
      #            cp /build/libopenpnp-capture.so /deploy/libopenpnp-capture-${{ matrix.os }}-${{ matrix.arch }}.so
      #   if: matrix.os == 'ubuntu-latest' && matrix.arch == 'aarch64'

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with: 
          path: |
            deploy/*

      - name: Create Release
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
        uses: ncipollo/release-action@v1
        with:
            artifacts: "deploy/*"
            token: ${{ secrets.GITHUB_TOKEN }}
            allowUpdates: true
